q()
# training_set = scale(training_set)
# test_set = scale(test_set)
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
view(dataset)
View(dataset)
load("E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/Data.csv")
library(readr)
dataset <- read_csv(NULL)
View(dataset)
# Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave)
source('E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/data_preprocessing_template.R')
library(readr)
dataset <- read_csv(NULL)
View(dataset)
load("E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/Data.csv")
Data <- read.csv("E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Data.csv")
View(Data)
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
dataset <- read.csv("E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Data.csv")
View(dataset)
dataset = read.csv('Data.csv')
source('E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/data_preprocessing_template.R')
View(Data)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
setwd("E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
install.packages('caTools')
library("caTools", lib.loc="~/R/win-library/3.4")
detach("package:caTools", unload=TRUE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set = subset(dataset, split == TRUE)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
View(test_set)
View(test_set)
View(dataset)
View(dataset)
training_set = scale(training_set)
test_set = scale(test_set)
training_set[, 2:3] = scale(training_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
View(test_set)
View(test_set)
View(training_set)
View(training_set)
View(Data)
View(Data)
View(dataset)
