q()
# training_set = scale(training_set)
# test_set = scale(test_set)
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
view(dataset)
View(dataset)
load("E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/Data.csv")
library(readr)
dataset <- read_csv(NULL)
View(dataset)
# Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave)
source('E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/data_preprocessing_template.R')
library(readr)
dataset <- read_csv(NULL)
View(dataset)
load("E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/Data.csv")
Data <- read.csv("E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Data.csv")
View(Data)
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
dataset <- read.csv("E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/Data.csv")
View(dataset)
dataset = read.csv('Data.csv')
source('E:/MachineLearning/Machine Learning A-Z/Part 1 - Data Preprocessing/data_preprocessing_template.R')
View(Data)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
View(dataset)
setwd("E:/MachineLearning/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Multiple_Linear_Regression")
View(dataset)
View(dataset)
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
View(dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend + State,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend ,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ Administration + Marketing.Spend ,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ Administration ,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend ,
data = training_set)
summary(regressor)
